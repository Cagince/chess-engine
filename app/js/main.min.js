var init, initFilesRanksBRD, initHashKeys, initLookupTables;

$(function() {
  init();
  console.log("Initialization complete");
  ParseFen(START_FEN);
  return PrintBoard();
});

initFilesRanksBRD = function() {
  var file, index, j, k, rank, ref, ref1, ref2, ref3, sq;
  index = 0;
  while (index < BOARD_SQUARE_NUMBER) {
    FILESBOARD[index] = SQUARES.OFFBOARD;
    RANKSBOARD[index] = SQUARES.OFFBOARD;
    index++;
  }
  for (rank = j = ref = RANKS.RANK_1, ref1 = RANKS.RANK_8; ref <= ref1 ? j <= ref1 : j >= ref1; rank = ref <= ref1 ? ++j : --j) {
    for (file = k = ref2 = FILES.FILE_A, ref3 = FILES.FILE_H; ref2 <= ref3 ? k <= ref3 : k >= ref3; file = ref2 <= ref3 ? ++k : --k) {
      sq = FR2SQ(file, rank);
      FILESBOARD[sq] = file;
      RANKSBOARD[sq] = rank;
    }
  }
  return console.log("files ranks and board has been initialized");
};

initHashKeys = function() {
  var SideKey, i, j, k, ref;
  for (i = j = 0, ref = 14 * 120; 0 <= ref ? j <= ref : j >= ref; i = 0 <= ref ? ++j : --j) {
    PieceKeys[i] = RAND_32();
  }
  SideKey = RAND_32();
  for (i = k = 0; k <= 16; i = ++k) {
    CastleKeys[i] = RAND_32();
  }
  return console.log("Hash Keys has been initialized");
};

initLookupTables = function() {
  var file, j, k, rank, ref, ref1, ref2, ref3, sq, sq64;
  Sq120tosq64.fill(65);
  Sq64tosq120.fill(120);
  sq64 = 0;
  for (rank = j = ref = RANKS.RANK_1, ref1 = RANKS.RANK_8; ref <= ref1 ? j <= ref1 : j >= ref1; rank = ref <= ref1 ? ++j : --j) {
    for (file = k = ref2 = FILES.FILE_A, ref3 = FILES.FILE_H; ref2 <= ref3 ? k <= ref3 : k >= ref3; file = ref2 <= ref3 ? ++k : --k) {
      sq = FR2SQ(file, rank);
      Sq64tosq120[sq64] = sq;
      Sq120tosq64[sq] = sq64;
      sq64++;
    }
  }
  return console.log("Lookup Tables hasbeen initialized");
};

init = function() {
  console.log("initializing...");
  initFilesRanksBRD();
  initHashKeys();
  return initLookupTables();
};
